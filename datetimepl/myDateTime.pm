
#----------------------------------------------------------------------------------------------------------
#	myDateTime
#----------------------------------------------------------------------------------------------------------

package myDateTime;

use utf8;
use strict;
use warnings;
use Time::Local;

	# --- クラス生成 ---

	#-----------------------------------------------------------
	# クラス生成
	#-----------------------------------------------------------
	sub new
    {
		my ( $class, @args ) = @_;
		my %args = ref $args[0] eq 'HASH' ? %{$args[0]} : @args;
		my $self = {%args};
		return bless($self);
	}
	# --- 構造体取得 ---
	
	#------------------------------------------------------------
	#	現在を取得
	#------------------------------------------------------------
	sub dtNow
	{
		my $self = shift;
		return $self->_ChEp2DT( time );
	}
	#------------------------------------------------------------
	#	今の時間に秒を足す
	#------------------------------------------------------------
	sub dtNowAddS
	{
		my $self = shift;
		return $self->_ChEp2DT( time + $_[0] );
	}
	#------------------------------------------------------------
	#	今の時間に日にちを足す
	#------------------------------------------------------------
	sub dtNowAddD
	{
		my $self = shift;
		return $self->_ChEp2DT( time + 24*60*60*$_[0] );
	}
	#------------------------------------------------------------
	#	日にちデーターを生成(MySQLのDateTimeまたはDateのフォーマットから)
	#------------------------------------------------------------
	sub dtMakeD
	{
		my $self = shift;
		my $time = $self->_GetDT2Ep($_[0]);
		return $self->_ChEp2DT($time);
	}
	
	# --- 時間を増減 ---
	
	






	# --- 表示 ---

	#------------------------------------------------------------
	#	MySQLのDateTimeと同じフォーマット
	#------------------------------------------------------------
	sub fMyDT
	{
		my $self = shift;
		my @t = @{$_[0]};
		return sprintf("%04d-%02d-%02d %02d:%02d:%02d",$t[0],$t[1],$t[2],$t[3],$t[4],$t[5]);
	}
	#------------------------------------------------------------
	#	MySQLのDateと同じフォーマット
	#------------------------------------------------------------
	sub fMyD
	{
		my $self = shift;
		my @t = @{$_[0]};
		return sprintf("%04d-%02d-%02d",$t[0],$t[1],$t[2]);
	}
	#------------------------------------------------------------
	#	年と月
	#------------------------------------------------------------
	sub fMyM
	{
		my $self = shift;
		my @t = @{$_[0]};
		return sprintf("%04d-%02d",$t[0],$t[1]);
	}
	#------------------------------------------------------------
	#	日本語で日時（引数はDateTimeフォーマット）
	#------------------------------------------------------------
	sub fMyDTJ
	{
		my $self = shift;
		my @t = @{$_[0]};
		return sprintf("%04d年%02d月%02d日 %02d時%02d分%02d秒",$t[0],$t[1],$t[2],$t[3],$t[4],$t[5]);
	}
	#------------------------------------------------------------
	#	日本語で日付（引数はDateフォーマット）
	#------------------------------------------------------------
	sub fMyDJ
	{
		my $self = shift;
		my @t = @{$_[0]};
		return sprintf("%04d年%02d月%02d日",$t[0],$t[1],$t[2]);
	}
	#------------------------------------------------------------
	#	日本語で年と月
	#------------------------------------------------------------
	sub fMyMJ
	{
		my $self = shift;
		my @t = @{$_[0]};
		return sprintf("%04d年%02d月",$t[0],$t[1]);
	}
	#------------------------------------------------------------
	#	日本語で日時曜日
	#------------------------------------------------------------
	sub fMyDTJW
	{
		my $self = shift;
		my $dna = &fMyDTJ($_[0]);
		my $mdy = qq(\().&_GetWJ($_[0]).qq(曜日\));
		$dna =~ s/ /$mdy /;
		return $dna;
	}
	#------------------------------------------------------------
	#	日本語で日付曜日
	#------------------------------------------------------------
	sub fMyDJW
	{
		my $self = shift;
		return &fMyDJ($_[0]).qq(\().&_GetWJ($_[0]).qq(\));
	}

	# --- プライベート ---

	#------------------------------------------------------------
	#	Epock から 年～秒
	#------------------------------------------------------------
	sub _ChEp2DT
	{
		my $self = shift;
		my @DT = reverse((localtime( $_[0] ))[0..5]);
		$DT[0] += 1900;
		$DT[1] += 1;
		$DT[6] = (localtime( $_[0] ))[6];
		$DT[7] = $_[0];
		return \@DT
	}
	#------------------------------------------------------------
	#	日本語の曜日を返す
	#------------------------------------------------------------
	sub _GetWJ
	{
		my $self = shift;
		my @wdays = ("日","月","火","水","木","金","土");
		return $wdays[@{$_[0]}[6]];
	}
	#------------------------------------------------------------
	#	年～秒 から Epock 
	#------------------------------------------------------------
	sub _GetDT2Ep
	{
		my $self = shift;
		my( $temp1, $temp2 ) = split(/ /,$_[0]);
		my( $year, $mon, $mday ) = split(/-/,$temp1);
		my( $hour, $min, $sec );
		if( defined($temp2) )
		{
			( $hour, $min, $sec ) = split(/:/,$temp2);
		}else{
			$hour = $min = $sec = 0;
		}
		if( $year eq "" ){ return ""; }
		my $time = timelocal($sec, $min, $hour, $mday, $mon - 1, $year);
		return $time;
	}
	#------------------------------------------------------------

1;